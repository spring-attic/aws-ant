<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright 2010 SpringSource
   
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
   
       https://www.apache.org/licenses/LICENSE-2.0
   
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project name="quality-war" xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:osgi="antlib:org.springframework.build.osgi">

	<import file="common.xml"/>
	<import file="../common/quality.xml"/>

	<target name="osgi-validate" depends="ivy.init, osgi.init"
			description="Validates that a bundle can resolve against it's dependencies.">
		<ivy:cachepath resolveId="osgi.optional.classpath" pathid="osgi.optional.classpath"
				conf="compile,optional,provided,dm-server-provided" type="jar" log="download-only"/>
		<osgi:validate bundlePath="${war.output.file}">
			<equinoxPath refid="equinox.classpath"/>
			<supportingBundlesPath refid="osgi.optional.classpath"/>
		</osgi:validate>

		<ivy:cachepath resolveId="osgi.compile.classpath" pathid="osgi.compile.classpath"
				conf="compile,provided,dm-server-provided" type="jar" log="download-only"/>
		<osgi:validate bundlePath="${war.output.file}">
			<equinoxPath refid="equinox.classpath"/>
			<supportingBundlesPath refid="osgi.compile.classpath"/>
		</osgi:validate>
	</target>

<!-- Other targets -->
	<target name="test.do" depends="ivy.init, resolve.test, compile.init, test.init" if="test.exists">
		<path id="test.compile.classpath">
			<pathelement location="${war.classes.dir}"/>
			<path refid="compile.classpath"/>
			<path refid="test.classpath"/>
		</path>
		<test-compile classpath.id="test.compile.classpath" input.dir="${test.java.dir}" output.dir="${test.output.dir}"
				resources.dir="${test.resources.dir}"/>

		<path id="test.run.classpath">
			<pathelement location="${war.classes.dir}"/>
			<pathelement location="${test.output.dir}"/>
			<path refid="compile.classpath"/>
			<path refid="test.classpath"/>
			<path refid="runtime.classpath"/>
		</path>
		<test-run classpath.id="test.run.classpath"/>
	</target>

	<target name="findbugs.do" depends="ivy.init, resolve.compile, compile.init, findbugs.init, src.init" if="src.exists">
		<findbugs home="${findbugs.dir}" output="xml" outputFile="${findbugs.output.file}"
				excludeFilter="${findbugs.exclude.file}" jvmargs="-Xmx1024M" errorProperty="findbugs.errors" warningsProperty="findbugs.warnings">
			<class location="${war.classes.dir}"/>
			<auxClasspath refid="compile.classpath"/>
			<sourcepath location="${main.java.dir}"/>
		</findbugs>
		<antcall target="findbugs.post"/>
	</target>

	<target name="findbugs.post" if="findbugs.enforce">
		<fail if="findbugs.errors" message="FindBugs errors found"/>
		<fail if="findbugs.warnings" message="FindBugs warnings found"/>
	</target>

</project>